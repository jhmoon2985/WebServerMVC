@model List<WebServerMVC.Models.Client>
@{
    ViewData["Title"] = "포인트 관리";
}

<div class="container">
    <div class="mb-3">
        <a asp-action="Index" class="btn btn-outline-secondary">← 클라이언트 목록으로</a>
    </div>

    <h1>포인트 관리</h1>

@if (TempData["Success"] != null)
{
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}

@if (TempData["Error"] != null)
{
        <div class="alert alert-danger alert-dismissible fade show">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}

    <div class="card mb-4">
        <div class="card-header">
            <h5>포인트 통계</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <h5>총 포인트</h5>
                            <h3>@Model.Sum(c => c.Points)</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-info text-white">
                        <div class="card-body">
                            <h5>평균 포인트</h5>
                            <h3>@(Model.Count > 0 ? Math.Round((double)Model.Sum(c => c.Points) / Model.Count, 2) : 0)</h3>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <h5>선호도 활성화 클라이언트</h5>
                            <h3>@Model.Count(c => c.IsPreferenceActive)</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h5>클라이언트 포인트 목록</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="pointsTable">
                    <thead>
                        <tr>
                            <th>클라이언트 ID</th>
                            <th>상태</th>
                            <th>포인트</th>
                            <th>선호도 활성화</th>
                            <th>액션</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var client in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-action="Details" asp-route-id="@client.ClientId">
                                        @client.ClientId.Substring(0, 8)...
                                    </a>
                                </td>
                                <td>
                                    @if (string.IsNullOrEmpty(client.ConnectionId))
                                    {
                                        <span class="badge bg-secondary">오프라인</span>
                                    }
                                    else if (client.IsMatched)
                                    {
                                        <span class="badge bg-success">매칭됨</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark">대기 중</span>
                                    }
                                </td>
                                <td class="text-end">
                                    <span class="badge bg-primary fs-6">@client.Points</span>
                                </td>
                                <td>
                                    @if(client.IsPreferenceActive)
                                    {
                                        <span class="badge bg-success">활성화됨</span>
                                        <small>(@client.PreferenceActiveUntil?.ToString("yyyy-MM-dd HH:mm:ss"))</small>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">비활성화</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-primary"
                                            onclick="showAddPointsModal('@client.ClientId', '@client.Points')">
                                            추가
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                            onclick="showSubtractPointsModal('@client.ClientId', '@client.Points')"
                                            @(client.Points <= 0 ? "disabled" : "")>
                                            차감
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- 포인트 추가 모달 -->
<div class="modal fade" id="addPointsModal" tabindex="-1" aria-labelledby="addPointsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addPointsModalLabel">포인트 추가</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="AddPoints" method="post" id="addPointsForm">
                    <input type="hidden" name="clientId" id="addClientId">
                    <div class="mb-3">
                        <label class="form-label">클라이언트 ID</label>
                        <input type="text" class="form-control" id="addClientIdDisplay" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">현재 포인트</label>
                        <input type="text" class="form-control" id="currentPoints" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="addAmount" class="form-label">추가할 포인트</label>
                        <input type="number" class="form-control" id="addAmount" name="amount" min="1" value="1000" required>
                    </div>
                    <button type="submit" class="btn btn-primary">포인트 추가</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- 포인트 차감 모달 -->
<div class="modal fade" id="subtractPointsModal" tabindex="-1" aria-labelledby="subtractPointsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="subtractPointsModalLabel">포인트 차감</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="SubtractPoints" method="post" id="subtractPointsForm">
                    <input type="hidden" name="clientId" id="subtractClientId">
                    <div class="mb-3">
                        <label class="form-label">클라이언트 ID</label>
                        <input type="text" class="form-control" id="subtractClientIdDisplay" readonly>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">현재 포인트</label>
                        <input type="text" class="form-control" id="currentPointsSubtract" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="subtractAmount" class="form-label">차감할 포인트</label>
                        <input type="number" class="form-control" id="subtractAmount" name="amount" min="1" required>
                    </div>
                    <button type="submit" class="btn btn-danger">포인트 차감</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/dataTables.bootstrap5.min.js"></script>

@section Scripts {
    <script>
        // 포인트 추가 모달 표시
        function showAddPointsModal(clientId, points) {
            document.getElementById('addClientId').value = clientId;
            document.getElementById('addClientIdDisplay').value = clientId;
            document.getElementById('currentPoints').value = points;
            
            const addPointsModal = new bootstrap.Modal(document.getElementById('addPointsModal'));
            addPointsModal.show();
        }
        
        // 포인트 차감 모달 표시
        function showSubtractPointsModal(clientId, points) {
            document.getElementById('subtractClientId').value = clientId;
            document.getElementById('subtractClientIdDisplay').value = clientId;
            document.getElementById('currentPointsSubtract').value = points;
            document.getElementById('subtractAmount').value = Math.min(1000, points);
            document.getElementById('subtractAmount').max = points;
            
            const subtractPointsModal = new bootstrap.Modal(document.getElementById('subtractPointsModal'));
            subtractPointsModal.show();
        }
        
        // DataTable 초기화
        $(document).ready(function() {
            $('#pointsTable').DataTable({
                order: [[2, 'desc']], // 포인트 기준 내림차순 정렬
                pageLength: 25,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/ko.json'
                }
            });
        });
        
        // 페이지 자동 새로고침 (60초마다)
        setTimeout(function () {
            location.reload();
        }, 60000);
    </script>
}