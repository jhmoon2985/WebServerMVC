@model WebServerMVC.Models.Client
@{
    ViewData["Title"] = "클라이언트 상세";
    var matchedClient = ViewBag.MatchedClient as WebServerMVC.Models.Client;
}

<div class="container">
    <div class="mb-3">
        <a asp-action="Index" class="btn btn-outline-secondary">← 목록으로</a>
        <a asp-action="ClientMessages" asp-route-clientId="@Model.ClientId" class="btn btn-outline-info">메시지 보기</a>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>클라이언트 정보</h5>
                </div>
                <div class="card-body">
                    <table class="table">
                        <tr>
                            <th>클라이언트 ID</th>
                            <td>@Model.ClientId</td>
                        </tr>
                        <tr>
                            <th>연결 ID</th>
                            <td>@(string.IsNullOrEmpty(Model.ConnectionId) ? "연결되지 않음" : Model.ConnectionId)</td>
                        </tr>
                        <tr>
                            <th>연결 시간</th>
                            <td>@Model.ConnectedAt.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
                        <tr>
                            <th>성별</th>
                            <td>@(string.IsNullOrEmpty(Model.Gender) ? "미설정" : (Model.Gender.ToLower() == "male" ? "남성"
                                                                : "여성"))</td>
                        </tr>
                        <tr>
                            <th>위치</th>
                            <td>위도: @Model.Latitude, 경도: @Model.Longitude</td>
                        </tr>
                        <tr>
                            <th>매칭 선호 성별</th>
                            <td>
                                @(string.IsNullOrEmpty(Model.PreferredGender) || Model.PreferredGender == "any"
                                                                ? "제한 없음"
                                                                : (Model.PreferredGender.ToLower() == "male" ? "남성만" : "여성만"))
                            </td>
                        </tr>
                        <tr>
                            <th>최대 매칭 거리</th>
                            <td>@Model.MaxDistance km</td>
                        </tr>
                        <tr>
                            <th>상태</th>
                            <td>
                                @if (string.IsNullOrEmpty(Model.ConnectionId))
                                {
                                    <span class="badge bg-secondary">오프라인</span>
                                }
                                else if (Model.IsMatched)
                                {
                                    <span class="badge bg-success">매칭됨</span>
                                }
                                else
                                {
                                    <span class="badge bg-warning text-dark">대기 중</span>
                                }
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <!-- 포인트 정보 카드 추가 -->
            <div class="card mt-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>포인트 정보</h5>
                    <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal"
                        data-bs-target="#pointsModal">
                        포인트 관리
                    </button>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h3>현재 포인트: <span class="text-primary">@Model.Points</span></h3>
                    </div>

                    <div class="mt-3">
                        <h5>선호도 활성화 상태</h5>
                        @if (Model.IsPreferenceActive)
                        {
                            <div class="alert alert-success">
                                <strong>활성화됨</strong> (만료: @Model.PreferenceActiveUntil?.ToString("yyyy-MM-dd HH:mm:ss"))
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-secondary">
                                <strong>비활성화됨</strong>
                                <div class="mt-2">
                                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                                        data-bs-target="#activateModal">
                                        선호도 활성화
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5>매칭 정보</h5>
                </div>
                <div class="card-body">
                    @if (Model.IsMatched && matchedClient != null)
                    {
                        <table class="table">
                            <tr>
                                <th>매칭된 클라이언트 ID</th>
                                <td>@matchedClient.ClientId</td>
                            </tr>
                            <tr>
                                <th>성별</th>
                                <td>@(string.IsNullOrEmpty(matchedClient.Gender) ? "미설정" : (matchedClient.Gender.ToLower()
                                                                    == "male" ? "남성" : "여성"))</td>
                        </tr>
                        <tr>
                            <th>위치</th>
                            <td>위도: @matchedClient.Latitude, 경도: @matchedClient.Longitude</td>
                        </tr>
                        <tr>
                            <th>거리</th>
                            <td>
                                @{
                                        var locationService = new WebServerMVC.Services.LocationService();
                                        var distance = locationService.CalculateDistance(
                                        Model.Latitude, Model.Longitude,
                                        matchedClient.Latitude, matchedClient.Longitude
                                        );
                                    }
                                    @distance km
                                </td>
                            </tr>
                            <tr>
                                <th>액션</th>
                                <td>
                                    <a asp-action="Details" asp-route-id="@matchedClient.ClientId"
                                        class="btn btn-sm btn-primary">상대방 정보 보기</a>
                                </td>
                            </tr>
                        </table>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            현재 매칭된 클라이언트가 없습니다.
                        </div>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h5>위치 지도</h5>
                </div>
                <div class="card-body">
                    <div id="map" style="height: 300px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 포인트 관리 모달 -->
<div class="modal fade" id="pointsModal" tabindex="-1" aria-labelledby="pointsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pointsModalLabel">포인트 관리</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="add-tab" data-bs-toggle="tab" data-bs-target="#add"
                            type="button" role="tab" aria-controls="add" aria-selected="true">추가</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="subtract-tab" data-bs-toggle="tab" data-bs-target="#subtract"
                            type="button" role="tab" aria-controls="subtract" aria-selected="false">차감</button>
                    </li>
                </ul>
                <div class="tab-content mt-3" id="myTabContent">
                    <div class="tab-pane fade show active" id="add" role="tabpanel" aria-labelledby="add-tab">
                        <form asp-action="AddPoints" method="post">
                            <input type="hidden" name="clientId" value="@Model.ClientId" />
                            <div class="mb-3">
                                <label for="addAmount" class="form-label">추가할 포인트</label>
                                <input type="number" class="form-control" id="addAmount" name="amount" min="1"
                                    value="1000" required>
                            </div>
                            <button type="submit" class="btn btn-primary">포인트 추가</button>
                        </form>
                    </div>
                    <div class="tab-pane fade" id="subtract" role="tabpanel" aria-labelledby="subtract-tab">
                        <form asp-action="SubtractPoints" method="post">
                            <input type="hidden" name="clientId" value="@Model.ClientId" />
                            <div class="mb-3">
                                <label for="subtractAmount" class="form-label">차감할 포인트</label>
                                <input type="number" class="form-control" id="subtractAmount" name="amount" min="1"
                                    max="@Model.Points" value="@(Math.Min(1000, Model.Points))" required>
                            </div>
                            <button type="submit" class="btn btn-danger" @(Model.Points <= 0 ? "disabled" : "")>포인트
                                차감</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 선호도 활성화 모달 -->
<div class="modal fade" id="activateModal" tabindex="-1" aria-labelledby="activateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="activateModalLabel">선호도 활성화</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="ActivatePreference" method="post">
                    <input type="hidden" name="clientId" value="@Model.ClientId" />

                    <div class="alert alert-info">
                        선호도 활성화에는 1000 포인트가 차감됩니다.
                    </div>

                    <div class="mb-3">
                        <label for="preferredGender" class="form-label">선호 성별</label>
                        <select class="form-select" id="preferredGender" name="preferredGender">
                            <option value="any" selected="@(Model.PreferredGender == "any")">제한 없음</option>
                            <option value="male" selected="@(Model.PreferredGender == "male")">남성만</option>
                            <option value="female" selected="@(Model.PreferredGender == "female")">여성만</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="maxDistance" class="form-label">최대 매칭 거리 (km)</label>
                        <input type="number" class="form-control" id="maxDistance" name="maxDistance" min="1"
                            max="10000" value="@Model.MaxDistance" required>
                    </div>

                    <button type="submit" class="btn btn-primary" @(Model.Points < 1000 ? "disabled" : "")>활성화</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />

    <!-- Leaflet JavaScript -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script>
        // 지도 초기화
        function initMap() {
            var clientLocation = [@Model.Latitude, @Model.Longitude];
            var map = L.map('map').setView(clientLocation, 10);

            // OpenStreetMap 타일 레이어 추가
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // 클라이언트 마커 추가
            var clientMarker = L.marker(clientLocation).addTo(map);
            clientMarker.bindPopup('클라이언트 위치').openPopup();

            @if (Model.IsMatched && matchedClient != null)
                {
                    <text>
                                                                                // 매칭된 클라이언트 마커 추가
                        var matchedLocation = [@matchedClient.Latitude, @matchedClient.Longitude];
                        var matchedMarker = L.marker(matchedLocation).addTo(map);
                        matchedMarker.bindPopup('매칭된 클라이언트 위치');

                        // 두 위치를 모두 보이게 맵 조정
                        var bounds = L.latLngBounds([clientLocation, matchedLocation]);
                        map.fitBounds(bounds);

                        // 선 그리기
                        var polyline = L.polyline([clientLocation, matchedLocation], {color: 'red'}).addTo(map);
                    </text>
            }
                                        }

        // 지도 로드
        window.onload = initMap;

        // 페이지 자동 새로고침 (30초마다)
        setTimeout(function () {
            location.reload();
        }, 30000);
    </script>
}